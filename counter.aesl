<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="0" name="STATE_BASE"/>
<constant value="1" name="STATE_INPUT_BUTTON"/>
<constant value="2" name="STATE_INPUT_SENSOR"/>
<constant value="1" name="PRESSED"/>
<constant value="0" name="RELEASED"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node e-puck 1-->
<node nodeId="1" name="e-puck 1"># CONSTS
# STATE_BASE 0
# STATE_INPUT_BUTTON 1
# STATE_INPUT_SENSOR 2
# pressed 1
# released 0


var numbers[4] = [0,0,0,0]
var state =

var button_is_pressed = 0



sub show_number (number_index)
#zoli
#

sub add_ten
#hanko
#

sub add_one
#hanko
#

sub init
#hanko
#

sub switch_state (state)
#

onevent button.backward
	if button.center == PRESSED then
		
	end
#
onevent button.left
    if button.center == PRESSED then
		
	end
#
onevent button.center 
	if button.center == PRESSED then
		button_is_pressed = button_is_pressed + 1
	elseif button.center == RELEASED then
		if button_is_pressed >= 60 then
			if state == STATE_BASE then
				new_state = STATE_INPUT_SENSOR
			else
				new_state = STATE_BASE
			end
		else
			if state == STATE_BASE then
				new_state = STATE_INPUT_BUTTON
			else
				new_state = STATE_BASE
			end
		end
		button_is_pressed = 0
	   callsub switch_state
	end
#
onevent button.forward 
	if button.center == PRESSED then
		
	end
#
onevent button.right 
	if button.center == PRESSED then
		
	end
#</node>


<!--node e-puck 2-->
<node nodeId="2" name="e-puck 2"></node>


<!--node e-puck 3-->
<node nodeId="3" name="e-puck 3"></node>


<!--node e-puck 4-->
<node nodeId="4" name="e-puck 4"></node>


</network>
